package web.components;

import pojo.classes.Contacts;
import pojo.classes.Organizations;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Upload;
import com.vaadin.ui.VerticalLayout;

import dao.classes.DaoImpl;

public class OrganizationForm extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,10","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":true,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Button buttonCancel;
	@AutoGenerated
	private Button buttonOK;
	@AutoGenerated
	private TextField textFieldBankDetails;
	@AutoGenerated
	private TextField textFieldIBAN;
	@AutoGenerated
	private TextField textFieldZip;
	@AutoGenerated
	private TextField textFieldMobile;
	@AutoGenerated
	private TextField textFieldPhone;
	@AutoGenerated
	private TextField textFieldEmail;
	@AutoGenerated
	private TextField textFieldAdress;
	@AutoGenerated
	private ComboBox comboBoxCountry;
	@AutoGenerated
	private ComboBox comboBoxCity;
	@AutoGenerated
	private Upload uploadLogo;
	@AutoGenerated
	private ComboBox comboBoxType;
	@AutoGenerated
	private TextField textFieldName;
	@AutoGenerated
	private Label labelHeader;
	private Organizations organization;
	private Contacts contact;
	private DaoImpl dao;
	private String mode; //mode=update
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public OrganizationForm() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}


	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("400px");
		mainLayout.setHeight("629px");

		// top-level component properties
		setWidth("400px");
		setHeight("629px");

		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		mainLayout.addComponent(verticalLayout_1, "top:0.0px;left:0.0px;");

		return mainLayout;
	}


	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("380px");
		verticalLayout_1.setHeight("614px");
		verticalLayout_1.setMargin(true);
		verticalLayout_1.setSpacing(true);

		// labelHeader
		labelHeader = new Label();
		labelHeader.setImmediate(false);
		labelHeader.setWidth("-1px");
		labelHeader.setHeight("-1px");
		labelHeader.setValue("Organization description");
		verticalLayout_1.addComponent(labelHeader);
		verticalLayout_1.setComponentAlignment(labelHeader, new Alignment(48));

		// textFieldName
		textFieldName = new TextField();
		textFieldName.setCaption("Name");
		textFieldName.setImmediate(false);
		textFieldName.setWidth("207px");
		textFieldName.setHeight("-1px");
		textFieldName.setRequired(true);
		verticalLayout_1.addComponent(textFieldName);

		// comboBoxType
		comboBoxType = new ComboBox();
		comboBoxType.setCaption("Type");
		comboBoxType.setImmediate(false);
		comboBoxType.setWidth("-1px");
		comboBoxType.setHeight("-1px");
		comboBoxType.setRequired(true);
		verticalLayout_1.addComponent(comboBoxType);

		// uploadLogo
		uploadLogo = new Upload();
		uploadLogo.setImmediate(false);
		uploadLogo.setWidth("-1px");
		uploadLogo.setHeight("-1px");
		verticalLayout_1.addComponent(uploadLogo);

		// comboBoxCity
		comboBoxCity = new ComboBox();
		comboBoxCity.setCaption("City");
		comboBoxCity.setImmediate(false);
		comboBoxCity.setWidth("208px");
		comboBoxCity.setHeight("-1px");
		comboBoxCity.setRequired(true);
		verticalLayout_1.addComponent(comboBoxCity);

		// comboBoxCountry
		comboBoxCountry = new ComboBox();
		comboBoxCountry.setCaption("Country");
		comboBoxCountry.setImmediate(false);
		comboBoxCountry.setWidth("207px");
		comboBoxCountry.setHeight("-1px");
		comboBoxCountry.setRequired(true);
		verticalLayout_1.addComponent(comboBoxCountry);

		
		
		// textFieldAdress
		textFieldAdress = new TextField();
		textFieldAdress.setCaption("Address");
		textFieldAdress.setImmediate(false);
		textFieldAdress.setWidth("337px");
		textFieldAdress.setHeight("-1px");
		verticalLayout_1.addComponent(textFieldAdress);

		// textFieldEmail
		textFieldEmail = new TextField();
		textFieldEmail.setCaption("Email");
		textFieldEmail.setImmediate(false);
		textFieldEmail.setWidth("206px");
		textFieldEmail.setHeight("-1px");
		verticalLayout_1.addComponent(textFieldEmail);

		// textFieldPhone
		textFieldPhone = new TextField();
		textFieldPhone.setCaption("Phone number");
		textFieldPhone.setImmediate(false);
		textFieldPhone.setWidth("206px");
		textFieldPhone.setHeight("-1px");
		verticalLayout_1.addComponent(textFieldPhone);

		// textFieldMobile
		textFieldMobile = new TextField();
		textFieldMobile.setCaption("Mobile number");
		textFieldMobile.setImmediate(false);
		textFieldMobile.setWidth("-1px");
		textFieldMobile.setHeight("-1px");
		verticalLayout_1.addComponent(textFieldMobile);

		// textFieldZip
		textFieldZip = new TextField();
		textFieldZip.setCaption("Zip");
		textFieldZip.setImmediate(false);
		textFieldZip.setWidth("206px");
		textFieldZip.setHeight("-1px");
		verticalLayout_1.addComponent(textFieldZip);

		// textFieldIBAN
		textFieldIBAN = new TextField();
		textFieldIBAN.setCaption("IBAN");
		textFieldIBAN.setImmediate(false);
		textFieldIBAN.setWidth("337px");
		textFieldIBAN.setHeight("-1px");
		verticalLayout_1.addComponent(textFieldIBAN);

		// textFieldBankDetails
		textFieldBankDetails = new TextField();
		textFieldBankDetails.setCaption("Bank details");
		textFieldBankDetails.setImmediate(false);
		textFieldBankDetails.setWidth("337px");
		textFieldBankDetails.setHeight("-1px");
		verticalLayout_1.addComponent(textFieldBankDetails);

		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		verticalLayout_1.addComponent(horizontalLayout_1);

		return verticalLayout_1;
	}


	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("342px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);

		// buttonOK
		buttonOK = new Button();
		buttonOK.setCaption("OK");
		buttonOK.setImmediate(true);
		buttonOK.setWidth("-1px");
		buttonOK.setHeight("-1px");
		horizontalLayout_1.addComponent(buttonOK);

		// buttonCancel
		buttonCancel = new Button();
		buttonCancel.setCaption("Cancel");
		buttonCancel.setImmediate(true);
		buttonCancel.setWidth("-1px");
		buttonCancel.setHeight("-1px");
		horizontalLayout_1.addComponent(buttonCancel);

		return horizontalLayout_1;
	}

	public DaoImpl getDao() {
		return dao;
	}

	public void setDao(DaoImpl dao) {
		this.dao = dao;
	}

	public Contacts getContact() {
		return contact;
	}

	public void setContact(Contacts contact) {
		this.contact = contact;
	}

	public String getMode() {
		return mode;
	}

	public void setMode(String mode) {
		this.mode = mode;
	}

	public TextField getTextFieldMobile() {
		return textFieldMobile;
	}

	public void setTextFieldMobile(TextField textFieldMobile) {
		this.textFieldMobile = textFieldMobile;
	}

	public ComboBox getComboBoxCity() {
		return comboBoxCity;
	}

	public void setComboBoxCity(ComboBox comboBoxCity) {
		this.comboBoxCity = comboBoxCity;
	}

	public ComboBox getComboBoxCountry() {
		return comboBoxCountry;
	}

	public void setComboBoxCountry(ComboBox comboBoxCountry) {
		this.comboBoxCountry = comboBoxCountry;
	}

	public Upload getUploadLogo() {
		return uploadLogo;
	}

	public void setUploadLogo(Upload uploadLogo) {
		this.uploadLogo = uploadLogo;
	}

	public ComboBox getComboBoxType() {
		return comboBoxType;
	}

	public void setComboBoxType(ComboBox comboBoxType) {
		this.comboBoxType = comboBoxType;
	}

	public TextField getTextFieldZip() {
		return textFieldZip;
	}

	public void setTextFieldZip(TextField textFieldZip) {
		this.textFieldZip = textFieldZip;
	}

	public TextField getTextFieldEmail() {
		return textFieldEmail;
	}

	public void setTextFieldEmail(TextField textFieldEmail) {
		this.textFieldEmail = textFieldEmail;
	}

	public TextField getTextFieldPhone() {
		return textFieldPhone;
	}

	public void setTextFieldPhone(TextField textFieldPhone) {
		this.textFieldPhone = textFieldPhone;
	}

	public TextField getTextFieldAdress() {
		return textFieldAdress;
	}

	public void setTextFieldAdress(TextField textFieldAdress) {
		this.textFieldAdress = textFieldAdress;
	}

	public TextField getTextFieldName() {
		return textFieldName;
	}

	public void setTextFieldName(TextField textFieldName) {
		this.textFieldName = textFieldName;
	}

	public AbsoluteLayout getMainLayout() {
		return mainLayout;
	}

	public void setMainLayout(AbsoluteLayout mainLayout) {
		this.mainLayout = mainLayout;
	}

	public Button getButtonCancel() {
		return buttonCancel;
	}

	public void setButtonCancel(Button buttonCancel) {
		this.buttonCancel = buttonCancel;
	}

	public Button getButtonOK() {
		return buttonOK;
	}

	public void setButtonOK(Button buttonOK) {
		this.buttonOK = buttonOK;
	}


	public Organizations getOrganization() {
		return organization;
	}

	public void setOrganization(Organizations organization) {
		this.organization = organization;
	}

}
