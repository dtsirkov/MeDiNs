package web.forms;

import java.util.HashMap;

import web.classes.ComponentValidator;
import web.classes.PropertyManager;
import web.classes.Test;
import web.views.AbstractView;
import autogenerate.GenerateTableInPanel;
import beans.TreatmentBean;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container.Filter;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.filter.Compare;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.Label;
import com.vaadin.ui.Layout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.VerticalLayout;

import dao.classes.DaoIntrfc;

public class MedicalReportForm extends Form {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout verticalLayout;
	@AutoGenerated
	private TextArea textArea_3;
	@AutoGenerated
	private Label recommendationsLB;
	@AutoGenerated
	private CheckBox drugsNo;
	@AutoGenerated
	private CheckBox drugsYes;
	@AutoGenerated
	private Label drugsLB;
	@AutoGenerated
	private CheckBox alcoholNoCB;
	@AutoGenerated
	private CheckBox alcoholYesCB;
	@AutoGenerated
	private Label alcoholLB;
	@AutoGenerated
	private TextArea presentConditionTA;
	@AutoGenerated
	private Label presentConditionLB;
	@AutoGenerated
	private TextArea illnessHIstoryTA;
	@AutoGenerated
	private Label illnessHistoryLB;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MedicalReportForm() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	public MedicalReportForm(AbstractView view, String label) {

		super(view, label, new AbsoluteLayout());
		setCompositionRoot(getLayout());

	}

	public Layout buildLayout(String mode) {

		//get component validator
		ComponentValidator componentValidator = getComponentValidator();
		//get propertyManager
		PropertyManager propertyManager = getPropertyManager();
		//get access to DB
		DaoIntrfc dao = getDao();	

		//get main layout
		Layout absoluteLayout = buildMainLayout();
		setLayout(absoluteLayout);
		setCompositionRoot(absoluteLayout);
		
		Filter personIdFilter = new Compare.Equal("social_number", "1024785856");
		//Filter[] filters = {personIdFilter};
		Filter[] filters = {};
		
		BeanItemContainer<TreatmentBean> treatmentItemContainer = new BeanItemContainer<TreatmentBean>(TreatmentBean.class);
		treatmentItemContainer.addBean(new TreatmentBean("test", "description", 0.0));
		
		GenerateTableInPanel panel = new GenerateTableInPanel(TreatmentBean.class, treatmentItemContainer);
		panel.setWidth("100%");
		panel.setHeight("100%");
		verticalLayout.addComponent(panel);
		verticalLayout.setComponentAlignment(panel, Alignment.MIDDLE_CENTER);
		
		this.setData(treatmentItemContainer);

		return absoluteLayout;
	}

	@Override
	public boolean process(HashMap<String, Form> steps) {

		DaoIntrfc dao = getDao();

		BeanItemContainer<TreatmentBean> treatmentItemContainer = (BeanItemContainer<TreatmentBean>) getData();
		steps.get("stepMedicalReport").setData(treatmentItemContainer);		
		
		return true;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("600px");
		mainLayout.setHeight("952px");
		
		// top-level component properties
		setWidth("600px");
		setHeight("952px");
		
		// illnessHistoryLB
		illnessHistoryLB = new Label();
		illnessHistoryLB.setImmediate(false);
		illnessHistoryLB.setWidth("-1px");
		illnessHistoryLB.setHeight("-1px");
		illnessHistoryLB.setValue("History of illness");
		mainLayout.addComponent(illnessHistoryLB, "top:22.0px;left:40.0px;");
		
		// illnessHIstoryTA
		illnessHIstoryTA = new TextArea();
		illnessHIstoryTA.setImmediate(false);
		illnessHIstoryTA.setWidth("100.0%");
		illnessHIstoryTA.setHeight("100px");
		illnessHIstoryTA.setRequired(true);
		mainLayout.addComponent(illnessHIstoryTA,
				"top:40.0px;right:12.0px;left:20.0px;");
		
		// presentConditionLB
		presentConditionLB = new Label();
		presentConditionLB.setImmediate(false);
		presentConditionLB.setWidth("-1px");
		presentConditionLB.setHeight("-1px");
		presentConditionLB.setValue("Present condition");
		mainLayout.addComponent(presentConditionLB, "top:160.0px;left:40.0px;");
		
		// presentConditionTA
		presentConditionTA = new TextArea();
		presentConditionTA.setImmediate(false);
		presentConditionTA.setWidth("100.0%");
		presentConditionTA.setHeight("100px");
		presentConditionTA.setRequired(true);
		mainLayout.addComponent(presentConditionTA,
				"top:180.0px;right:11.0px;left:20.0px;");
		
		// alcoholLB
		alcoholLB = new Label();
		alcoholLB.setImmediate(false);
		alcoholLB.setWidth("-1px");
		alcoholLB.setHeight("-1px");
		alcoholLB.setValue("Alcohol:");
		mainLayout.addComponent(alcoholLB, "top:302.0px;left:40.0px;");
		
		// alcoholYesCB
		alcoholYesCB = new CheckBox();
		alcoholYesCB.setCaption("yes");
		alcoholYesCB.setImmediate(false);
		alcoholYesCB.setWidth("-1px");
		alcoholYesCB.setHeight("-1px");
		mainLayout.addComponent(alcoholYesCB, "top:300.0px;left:100.0px;");
		
		// alcoholNoCB
		alcoholNoCB = new CheckBox();
		alcoholNoCB.setCaption("no");
		alcoholNoCB.setImmediate(false);
		alcoholNoCB.setWidth("-1px");
		alcoholNoCB.setHeight("-1px");
		alcoholNoCB.setRequired(true);
		mainLayout.addComponent(alcoholNoCB, "top:300.0px;left:160.0px;");
		
		// drugsLB
		drugsLB = new Label();
		drugsLB.setImmediate(false);
		drugsLB.setWidth("-1px");
		drugsLB.setHeight("-1px");
		drugsLB.setValue("Drugs:");
		mainLayout.addComponent(drugsLB, "top:322.0px;left:40.0px;");
		
		// drugsYes
		drugsYes = new CheckBox();
		drugsYes.setCaption("yes");
		drugsYes.setImmediate(false);
		drugsYes.setWidth("-1px");
		drugsYes.setHeight("-1px");
		mainLayout.addComponent(drugsYes, "top:321.0px;left:100.0px;");
		
		// drugsNo
		drugsNo = new CheckBox();
		drugsNo.setCaption("no");
		drugsNo.setImmediate(false);
		drugsNo.setWidth("-1px");
		drugsNo.setHeight("-1px");
		drugsNo.setRequired(true);
		mainLayout.addComponent(drugsNo, "top:321.0px;left:160.0px;");
		
		// recommendationsLB
		recommendationsLB = new Label();
		recommendationsLB.setImmediate(false);
		recommendationsLB.setWidth("-1px");
		recommendationsLB.setHeight("-1px");
		recommendationsLB.setValue("Recommendations");
		mainLayout.addComponent(recommendationsLB, "top:362.0px;left:39.0px;");
		
		// textArea_3
		textArea_3 = new TextArea();
		textArea_3.setImmediate(false);
		textArea_3.setWidth("100.0%");
		textArea_3.setHeight("100px");
		mainLayout.addComponent(textArea_3,
				"top:380.0px;right:12.0px;left:20.0px;");
		
		// verticalLayout
		verticalLayout = new VerticalLayout();
		verticalLayout.setImmediate(false);
		verticalLayout.setWidth("100.0%");
		verticalLayout.setHeight("420px");
		verticalLayout.setMargin(false);
		mainLayout.addComponent(verticalLayout,
				"top:502.0px;right:20.0px;left:20.0px;");
		
		return mainLayout;
	}

}