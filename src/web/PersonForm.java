package web;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

import pojo_classes.Enumerations;
import pojo_classes.Persons;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.server.VaadinRequest;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;

import dao_classes.DaoImpl;
import dao_classes.DaoIntrfc;

public class PersonForm extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 8985294135487658005L;
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TextField personSocialNumberTF;
	@AutoGenerated
	private Label personSocialNumberLb;
	@AutoGenerated
	private Label personCreateLb;
	@AutoGenerated
	private Button personCancelBttn;
	@AutoGenerated
	private Button personCreateBttn;
	@AutoGenerated
	private ComboBox personTitleCB;
	@AutoGenerated
	private ComboBox personRoleCB;
	@AutoGenerated
	private ComboBox personSexCB;
	@AutoGenerated
	private ComboBox personJobTitleCB;
	@AutoGenerated
	private Label personJobTitleLb;
	@AutoGenerated
	private Label personSexLb;
	@AutoGenerated
	private Label personRoleLb;
	@AutoGenerated
	private PopupDateField personBirthDatePDF;
	@AutoGenerated
	private Label personBirthDateLb;
	@AutoGenerated
	private TextField personLastNameTF;
	@AutoGenerated
	private Label personLastNameLb;
	@AutoGenerated
	private TextField persomMiddleNameTF;
	@AutoGenerated
	private Label personMiddleNameLb;
	@AutoGenerated
	private TextField personFirstNameTF;
	@AutoGenerated
	private Label personFirstNameLb;
	@AutoGenerated
	private Label personTitleLb;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PersonForm(VaadinRequest request) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		final Persons person = new Persons();	
		final DaoIntrfc dao = new DaoImpl();
		
		String language = request.getLocale().getLanguage();		
		
		//get enumerations 
		final Map<Enumerations, String> personTitleEnum = dao.getEnumeration("person title", language);
		final Map<Enumerations, String> personSexEnum = dao.getEnumeration("person sex", language);
		final Map<Enumerations, String> personRoleEnum = dao.getEnumeration("person role", language);
		final Map<Enumerations, String> personJobTitleEnum = dao.getEnumeration("job title", language);
		
		//add values in combo boxes
		personTitleCB.addItems(personTitleEnum.values().toArray());		
		personSexCB.addItems(personSexEnum.values().toArray());		
		personRoleCB.addItems(personRoleEnum.values().toArray());	
		personJobTitleCB.addItems(personJobTitleEnum.values().toArray());

		//add listeners
		personSocialNumberTF.addValueChangeListener(
				new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;
					public void valueChange(ValueChangeEvent event) {
						person.setSocialNumber(event.getProperty().getValue().toString());
					}
				});
		personSocialNumberTF.setImmediate(true);
		personSocialNumberTF.addValidator(CustomValidator.socialNumber());
		
		personFirstNameTF.addValueChangeListener(
				new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;
					public void valueChange(ValueChangeEvent event) {
						person.setFirstName(event.getProperty().getValue().toString());
					}
				});

		persomMiddleNameTF.addValueChangeListener(
				new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;
					public void valueChange(ValueChangeEvent event) {
						person.setMiddleName(event.getProperty().getValue().toString());
					}
				});

		personLastNameTF.addValueChangeListener(
				new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;
					public void valueChange(ValueChangeEvent event) {
						person.setLastName(event.getProperty().getValue().toString());
					}
				});

		personBirthDatePDF.addValueChangeListener(
				new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;
					public void valueChange(ValueChangeEvent event) {
						person.setBirthDate((Date)event.getProperty().getValue());
					}
				});
		personBirthDatePDF.setImmediate(true);

		personSexCB.addValueChangeListener(
				new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;
					public void valueChange(ValueChangeEvent event) {
						String value = event.getProperty().getValue().toString();
						Enumerations enumeration = new Enumerations();
						for (Map.Entry<Enumerations, String> entry : personSexEnum.entrySet()) {		
							if (value.equals(entry.getValue())) {
								enumeration = (Enumerations)entry.getKey();
							}		
						}
						person.setEnumerationsBySex(enumeration);
					}
				});
		personSexCB.setImmediate(true);


		personJobTitleCB.addValueChangeListener(
				new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;
					public void valueChange(ValueChangeEvent event) {
						String value = event.getProperty().getValue().toString();
						Enumerations enumeration = new Enumerations();
						for (Map.Entry<Enumerations, String> entry : personJobTitleEnum.entrySet()) {		
							if (value.equals(entry.getValue())) {
								enumeration = (Enumerations)entry.getKey();
							}		
						}
						person.setEnumerationsByJobTitle(enumeration);
					}
				});
		personJobTitleCB.setImmediate(true);
		

		personRoleCB.addValueChangeListener(
				new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;
					public void valueChange(ValueChangeEvent event) {
						String value = event.getProperty().getValue().toString();
						Enumerations enumeration = new Enumerations();
						for (Map.Entry<Enumerations, String> entry : personRoleEnum.entrySet()) {		
							if (value.equals(entry.getValue())) {
								enumeration = (Enumerations)entry.getKey();
							}		
						}
						person.setEnumerationsByRole(enumeration);
					}
				});
		personRoleCB.setImmediate(true);

		personTitleCB.addValueChangeListener(
				new Property.ValueChangeListener() {
					private static final long serialVersionUID = 1L;
					public void valueChange(ValueChangeEvent event) {
						String value = event.getProperty().getValue().toString();
						Enumerations enumeration = new Enumerations();
						for (Map.Entry<Enumerations, String> entry : personTitleEnum.entrySet()) {		
							if (value.equals(entry.getValue())) {
								enumeration = (Enumerations)entry.getKey();
							}		
						}
						person.setEnumerationsByTitle(enumeration);
					}
				});
		personTitleCB.setImmediate(true);

		// Handle the events with an anonymous class
		personCreateBttn.addClickListener(new Button.ClickListener() {
			private static final long serialVersionUID = 1L;
			public void buttonClick(ClickEvent event) {
				
				dao.persist(person);
				
				personCreateBttn.setCaption("Created!");
			}
		});


	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// personTitleLb
		personTitleLb = new Label();
		personTitleLb.setImmediate(false);
		personTitleLb.setWidth("-1px");
		personTitleLb.setHeight("-1px");
		personTitleLb.setValue("Title");
		mainLayout.addComponent(personTitleLb, "top:142.0px;left:120.0px;");
		
		// personFirstNameLb
		personFirstNameLb = new Label();
		personFirstNameLb.setImmediate(false);
		personFirstNameLb.setWidth("-1px");
		personFirstNameLb.setHeight("-1px");
		personFirstNameLb.setValue("Fisrt Name");
		mainLayout.addComponent(personFirstNameLb, "top:182.0px;left:120.0px;");
		
		// personFirstNameTF
		personFirstNameTF = new TextField();
		personFirstNameTF.setImmediate(false);
		personFirstNameTF.setWidth("181px");
		personFirstNameTF.setHeight("-1px");
		personFirstNameTF.setInvalidAllowed(false);
		personFirstNameTF.setRequired(true);
		mainLayout.addComponent(personFirstNameTF, "top:180.0px;left:279.0px;");
		
		// personMiddleNameLb
		personMiddleNameLb = new Label();
		personMiddleNameLb.setImmediate(false);
		personMiddleNameLb.setWidth("-1px");
		personMiddleNameLb.setHeight("-1px");
		personMiddleNameLb.setValue("Middle Name");
		mainLayout
				.addComponent(personMiddleNameLb, "top:222.0px;left:120.0px;");
		
		// persomMiddleNameTF
		persomMiddleNameTF = new TextField();
		persomMiddleNameTF.setImmediate(false);
		persomMiddleNameTF.setWidth("181px");
		persomMiddleNameTF.setHeight("-1px");
		persomMiddleNameTF.setInvalidAllowed(false);
		mainLayout
				.addComponent(persomMiddleNameTF, "top:216.0px;left:279.0px;");
		
		// personLastNameLb
		personLastNameLb = new Label();
		personLastNameLb.setImmediate(false);
		personLastNameLb.setWidth("-1px");
		personLastNameLb.setHeight("-1px");
		personLastNameLb.setValue("Last Name");
		mainLayout.addComponent(personLastNameLb, "top:260.0px;left:120.0px;");
		
		// personLastNameTF
		personLastNameTF = new TextField();
		personLastNameTF.setImmediate(false);
		personLastNameTF.setWidth("181px");
		personLastNameTF.setHeight("-1px");
		personLastNameTF.setInvalidAllowed(false);
		personLastNameTF.setRequired(true);
		mainLayout.addComponent(personLastNameTF, "top:256.0px;left:279.0px;");
		
		// personBirthDateLb
		personBirthDateLb = new Label();
		personBirthDateLb.setImmediate(false);
		personBirthDateLb.setWidth("-1px");
		personBirthDateLb.setHeight("-1px");
		personBirthDateLb.setValue("Birth Date");
		mainLayout.addComponent(personBirthDateLb, "top:300.0px;left:120.0px;");
		
		// personBirthDatePDF
		personBirthDatePDF = new PopupDateField();
		personBirthDatePDF.setImmediate(false);
		personBirthDatePDF.setWidth("181px");
		personBirthDatePDF.setHeight("-1px");
		personBirthDatePDF.setInvalidAllowed(false);
		personBirthDatePDF.setRequired(true);
		mainLayout
				.addComponent(personBirthDatePDF, "top:300.0px;left:279.0px;");
		
		// personRoleLb
		personRoleLb = new Label();
		personRoleLb.setImmediate(false);
		personRoleLb.setWidth("-1px");
		personRoleLb.setHeight("-1px");
		personRoleLb.setValue("Role");
		mainLayout.addComponent(personRoleLb, "top:380.0px;left:120.0px;");
		
		// personSexLb
		personSexLb = new Label();
		personSexLb.setImmediate(false);
		personSexLb.setWidth("-1px");
		personSexLb.setHeight("-1px");
		personSexLb.setValue("Sex");
		mainLayout.addComponent(personSexLb, "top:342.0px;left:120.0px;");
		
		// personJobTitleLb
		personJobTitleLb = new Label();
		personJobTitleLb.setImmediate(false);
		personJobTitleLb.setWidth("-1px");
		personJobTitleLb.setHeight("-1px");
		personJobTitleLb.setValue("Job Title");
		mainLayout.addComponent(personJobTitleLb, "top:422.0px;left:120.0px;");
		
		// personJobTitleCB
		personJobTitleCB = new ComboBox();
		personJobTitleCB.setImmediate(false);
		personJobTitleCB.setWidth("181px");
		personJobTitleCB.setHeight("-1px");
		personJobTitleCB.setInvalidAllowed(false);
		personJobTitleCB.setRequired(true);
		mainLayout.addComponent(personJobTitleCB, "top:422.0px;left:279.0px;");
		
		// personSexCB
		personSexCB = new ComboBox();
		personSexCB.setImmediate(false);
		personSexCB.setWidth("181px");
		personSexCB.setHeight("-1px");
		personSexCB.setInvalidAllowed(false);
		personSexCB.setRequired(true);
		mainLayout.addComponent(personSexCB, "top:340.0px;left:279.0px;");
		
		// personRoleCB
		personRoleCB = new ComboBox();
		personRoleCB.setImmediate(false);
		personRoleCB.setWidth("181px");
		personRoleCB.setHeight("-1px");
		personRoleCB.setRequired(true);
		mainLayout.addComponent(personRoleCB, "top:380.0px;left:279.0px;");
		
		// personTitleCB
		personTitleCB = new ComboBox();
		personTitleCB.setImmediate(false);
		personTitleCB.setWidth("181px");
		personTitleCB.setHeight("-1px");
		personTitleCB.setRequired(true);
		mainLayout.addComponent(personTitleCB, "top:140.0px;left:279.0px;");
		
		// personCreateBttn
		personCreateBttn = new Button();
		personCreateBttn.setCaption("Create");
		personCreateBttn.setImmediate(true);
		personCreateBttn.setWidth("-1px");
		personCreateBttn.setHeight("-1px");
		mainLayout.addComponent(personCreateBttn, "top:480.0px;left:396.0px;");
		
		// personCancelBttn
		personCancelBttn = new Button();
		personCancelBttn.setCaption("Cancel");
		personCancelBttn.setImmediate(true);
		personCancelBttn.setWidth("-1px");
		personCancelBttn.setHeight("-1px");
		mainLayout.addComponent(personCancelBttn, "top:480.0px;left:280.0px;");
		
		// personCreateLb
		personCreateLb = new Label();
		personCreateLb.setImmediate(false);
		personCreateLb.setWidth("460px");
		personCreateLb.setHeight("-1px");
		personCreateLb.setValue("Create Person");
		mainLayout.addComponent(personCreateLb, "top:40.0px;left:120.0px;");
		
		// personSocialNumberLb
		personSocialNumberLb = new Label();
		personSocialNumberLb.setImmediate(false);
		personSocialNumberLb.setWidth("-1px");
		personSocialNumberLb.setHeight("-1px");
		personSocialNumberLb.setValue("Social Number");
		mainLayout.addComponent(personSocialNumberLb,
				"top:102.0px;left:120.0px;");
		
		// personSocialNumberTF
		personSocialNumberTF = new TextField();
		personSocialNumberTF.setImmediate(false);
		personSocialNumberTF.setWidth("181px");
		personSocialNumberTF.setHeight("-1px");
		personSocialNumberTF.setRequired(true);
		mainLayout.addComponent(personSocialNumberTF,
				"top:96.0px;left:279.0px;");
		
		return mainLayout;
	}

}
